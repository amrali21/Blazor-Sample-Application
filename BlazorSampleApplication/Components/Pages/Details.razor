@page "/todo/details"

@using Microsoft.EntityFrameworkCore;
@using BlazorSampleApplication.DbModels;
@using BlazorSampleApplication.Services

@inject NavigationManager NavigationManager;
@inject TodoRepository repo;

<PageTitle>Create</PageTitle>

<h1>Details</h1>

@if (Todo is null)
{
    <p><em>Loading...</em></p>
    return;
}

<div class="row">

    <div class="col-md-4">
        <div class="border rounded p-4 bg-light">
            <!-- Status Indicator -->
            <div class="float-end">
                <span class="badge @(Todo.IsDone == true ? "bg-success" : "bg-warning") p-2">
                    @if (Todo.IsDone == true)
                    {
                        <i class="bi bi-check-circle-fill me-1"></i>
                        <span>Completed</span>
                    }
                    else
                    {
                        <i class="bi bi-circle me-1"></i>
                        <span>Pending</span>
                    }
                </span>
            </div>

            <!-- Todo Content -->
            <div>
                <h3 class="fs-4 fw-semibold text-dark mb-3">@Todo.Title</h3>

                <div class="mt-3">
                    <p class="text-muted mb-1 small">Description:</p>
                    <p class="text-body lh-base">@Todo.Description</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a class="mt-2" href="/todo">Back to List</a>
</div>

@code {
    private DbModels.Todo Todo { get; set; }

    [SupplyParameterFromQuery]
    private int Id { get; set; }


    protected override async Task OnInitializedAsync()
    {    
        Todo ??= await repo.GetTodoByIdAsync(Id);
    }


}
